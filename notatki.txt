biblioteka common z publicu z dysku O
if get_block_property ('MAIN',ORDER_BY) = 'S$A_PER_QUERY.ODCZYTAJ_NAZWA(NAZWA DESC' THEN
	set_block_property ('MAIN', ORDER_BY, 'S4A_PER_QUERY.ODCZYTAJ_NAZWA(NAZWA)');
else
	SET_BLOCK_PROPERTY('MAIN',ORDER_BY,'S4A_PER_QUERY.ODCZYTAJ_NAZWA(NAZWA) DESSC');
end if;
SETTINGS.SORT_OFF;
SET_ITEM_PROPERTY('MAIN_SORT.SORT_NAZWA',Current_Record,'SORT_ON');
SETTINGS.EXEQREY;



--exit on ins
--Walidacja
IF :INS.KOD IS NULL THEN
		
	GO_ITEM('INS.KOD');
	KOMUNIKAT('Wpisz kod');
	RAISE FORM_TRIGGER_FAILURE;
 
END IF;

IF S4A_FORM.ODCZYTAJ_WARTOSC_NUM('SELECT COUNT(KOD) FROM PER_PAR_TYPY_PARAMETROW WHERE KOD = '''||:INS.NADTYP_KOD||:INS.KOD||'''') > 0 THEN

	GO_ITEM('INS.KOD');
	KOMUNIKAT('Podany kod już istnieje');
	RAISE FORM_TRIGGER_FAILURE;

END IF;

IF :INS.NAZWA IS NULL THEN
		
	GO_ITEM('INS.NAZWA');
	KOMUNIKAT('Wpisz nazwę');
	RAISE FORM_TRIGGER_FAILURE;
	
END IF;
	
IF :INS.NAZWA_SKROT IS NULL THEN
		
	GO_ITEM('INS.NAZWA_SKROT');
	KOMUNIKAT('Wpisz sktót nazwy');
	RAISE FORM_TRIGGER_FAILURE;

END IF;

IF :INS.TYP_KOD IS NULL THEN
	
	GO_ITEM('INS.TYP_LV');
	KOMUNIKAT('Wybierz typ');
	RAISE FORM_TRIGGER_FAILURE;
	 	
END IF;	
		
IF :INS.ORD IS NULL THEN
		
	GO_ITEM('INS.ORD_LV');
	KOMUNIKAT('Wybierz kolejność sortowania');
	RAISE FORM_TRIGGER_FAILURE;
		
END IF;	

COMMIT_FORM;
	
IF FORM_SUCCESS	THEN

	:PARAMETER.PARAMETR_KOD := :INS.KOD;
	CLEAR_BLOCK(NO_VALIDATE);
	GO_ITEM('MAIN_INFO.WSTAW');
	SETTINGS.TREE_RELOAD(:PARAMETER.PARAMETR_KOD);

ELSE
	
	KOMUNIKAT('Wystąpił błąd przy próbie wstawienia');
	DO_KEY('KEY_EXIT');
	
END IF;
	

//procedury zapiujace i czytajace parametry

--Procedura odczytująca zapisane wartości wybranych parametrów
  PROCEDURE USER_PARAMETER_READ IS
	BEGIN

	    S4A_FORM.DEFAULT_INIT(V_TYP);

	    S4A_FORM.DEFAULT_GET('JEDN_ORG_ID',    :MAIN_HEAD.KATEDRA_SEKCJA_ID);
	    S4A_FORM.DEFAULT_GET('TYP_UMOWY_KOD',  :MAIN_HEAD.TYP_UMOWY_KOD);
	    S4A_FORM.DEFAULT_GET('STATUS_KOD',     :MAIN_HEAD.STATUS_KOD);
	    
  END USER_PARAMETER_READ;
  
  --Procedura zapisująca wartości wybranych parametrów  
  PROCEDURE USER_PARAMETER_SAVE IS
	BEGIN

	    S4A_FORM.DEFAULT_CHECK(V_TYP);
	
	    S4A_FORM.DEFAULT_SET('JEDN_ORG_ID',    :MAIN_HEAD.KATEDRA_SEKCJA_ID);
	    S4A_FORM.DEFAULT_SET('TYP_UMOWY_KOD',  :MAIN_HEAD.TYP_UMOWY_KOD);
	    S4A_FORM.DEFAULT_SET('STATUS_KOD',     :MAIN_HEAD.STATUS_KOD);
	
	    S4A_FORM.DEFAULT_SAVE;
	
	END USER_PARAMETER_SAVE;
	

 --Procedura ustawiająca kolor przycisku pozycji na kanwie MAIN
	PROCEDURE SET_BUTTON_MAIN IS
	BEGIN

		--Niezakończone	
		IF :MAIN.STATUS = '22' THEN
		
			SET_ITEM_INSTANCE_PROPERTY('MAIN.POZYCJA', CURRENT_RECORD, VISUAL_ATTRIBUTE, 'KOLOR_CZERWONY');
			--Przeciążaona procedura z COMMON'a
			--SET_VISUAL('MAIN.POZYCJA', 'KOLOR_CZERWONY');
	
		--Zakończone
		ELSIF :MAIN.STATUS = '21' THEN
		
			SET_ITEM_INSTANCE_PROPERTY('MAIN.POZYCJA', CURRENT_RECORD, VISUAL_ATTRIBUTE, 'KOLOR_CIEMNOSZARY');
		
		--W trakcie aneksowania
		ELSIF :MAIN.STATUS = '12' THEN
	
			SET_ITEM_INSTANCE_PROPERTY('MAIN.POZYCJA', CURRENT_RECORD, VISUAL_ATTRIBUTE, 'KOLOR_NIEBIESKI');
	
		--Zatwierdzone
		ELSIF :MAIN.STATUS = '15' THEN
	
			SET_ITEM_INSTANCE_PROPERTY('MAIN.POZYCJA', CURRENT_RECORD, VISUAL_ATTRIBUTE, 'KOLOR_SZARY');
	
		--W trakcie wprowadzania
		ELSIF :MAIN.STATUS = '11' THEN
	
			SET_ITEM_INSTANCE_PROPERTY('MAIN.POZYCJA', CURRENT_RECORD, VISUAL_ATTRIBUTE, 'KOLOR_ZOLTY');
	
		END IF;

	
	END SET_BUTTON_MAIN;
	
	
	
	
	
	
	
	
	
	
	
	
	
	--Procedura wczytująca dane do nagłówka
  PROCEDURE MAIN_HEAD_QUERY IS
 	BEGIN
 		
 		IF :MAIN_HEAD.KATEDRA_SEKCJA_ID IS NOT NULL THEN
		
			:MAIN_HEAD.KATEDRA_SEKCJA_NAZWA := S4A_JEDN_ORG_QUERY.NAZWA(:MAIN_HEAD.KATEDRA_SEKCJA_ID);
		
 		ELSE
 		
 			:MAIN_HEAD.KATEDRA_SEKCJA_NAZWA := 'Wszystkie jednostki';
 			
 		END IF;
		
		IF :MAIN_HEAD.TYP_UMOWY_KOD IS NOT NULL THEN
			
			:MAIN_HEAD.TYP_UMOWY_NAZWA := S4A_FORM.ODCZYTAJ_WARTOSC_TEXT('SELECT NAZWA FROM PER_TYPY_UMOW WHERE KOD = '''||:MAIN_HEAD.TYP_UMOWY_KOD||''' ');
	
		ELSE
			
			:MAIN_HEAD.TYP_UMOWY_NAZWA := S4A_FORM.ODCZYTAJ_WARTOSC_TEXT('SELECT NAZWA FROM PER_TYPY_UMOW WHERE KOD = '''||:MAIN.TYP_UMOWY_KOD||''' ');
			
		END IF;
		
		IF :MAIN_HEAD.STATUS_KOD IS NOT NULL THEN

			:MAIN_HEAD.STATUS_NAZWA := S4A_FORM.DESYGNATA('A019901', :MAIN_HEAD.STATUS_KOD);	
			
		ELSE
	
			:MAIN_HEAD.STATUS_NAZWA := S4A_PER_QUERY.UMOWA_STATUS_NAZWA(:MAIN.ID);	
			
		END IF;
		
		IF :MAIN_HEAD.ZAJECIA_KOD IS NOT NULL THEN

			IF :MAIN_HEAD.ZAJECIA_KOD = 'T' THEN
			
				:MAIN_HEAD.ZAJECIA_NAZWA := 'Umowa dydaktyczna';
				
			ELSE
				
				:MAIN_HEAD.ZAJECIA_NAZWA := 'Umowa niedydaktyczna';
				
			END IF;
			
		ELSE
		
			IF :MAIN.ZAJECIA = 'T' THEN
			
				:MAIN_HEAD.ZAJECIA_NAZWA := 'Umowa dydaktyczna';
				
			ELSE
				
				:MAIN_HEAD.ZAJECIA_NAZWA := 'Umowa niedydaktyczna';
				
			END IF;
				
		END IF;
		
		IF :MAIN_HEAD.PODSYSTEM_KOD IS NOT NULL THEN
			
			--TODO
			NULL;
			
		ELSE
			
			:MAIN_HEAD.PODSYSTEM_NAZWA := S4A_FORM.ODCZYTAJ_WARTOSC_TEXT('SELECT KOD_JEDNOSTKI FROM PER_UM_UMOWY_INNE WHERE NUMER_ANEKSU = 0 AND UMOWY_ID = '||:MAIN.ID);
			
			IF :MAIN_HEAD.PODSYSTEM_NAZWA IS NULL THEN
				
				IF :MAIN.TYP_UMOWY_KOD IN ('STYPENDIUM', 'STYPENDIUM_AS') THEN
			
					:MAIN_HEAD.PODSYSTEM_NAZWA := 'SD';
					
				ELSIF :MAIN.TYP_UMOWY_KOD IN ('STYPENDIUM_SD', 'STYPENDIUM_WMN') THEN
			
					:MAIN_HEAD.PODSYSTEM_NAZWA := 'SDBN';
					
				ELSIF :MAIN.TYP_UMOWY_KOD IN ('STYPENDIUM_ERAZM') THEN
			
					:MAIN_HEAD.PODSYSTEM_NAZWA := 'SERAZM';
		
				ELSIF :MAIN.TYP_UMOWY_KOD IN ('PRAKTYKA') THEN 
					
					:MAIN_HEAD.PODSYSTEM_NAZWA := 'PD';
				
				END IF;
			
			END IF;
		
		END IF;
					
	END MAIN_HEAD_QUERY;
	
	
	
	
	
		--Procedura ukrywa lub pokazuje elementy w zależności od roli
	PROCEDURE PRIVILEGES IS
	BEGIN
	
		IF :PARAMETER.ROLA IN ('PDT', 'DTS', 'REKTORAT') THEN
		
			:PARAMETER.UPR_DZIAL := S4A_FORM.ODCZYTAJ_ZMIENNA('WYDZIAL');
		
			IF :PARAMETER.UPR_DZIAL IS NULL THEN
		
				KOMUNIKAT('Nie zostały określone uprawnienia dotyczące działu'||CHR(10)||'Skontaktuj się z administratorem');
				DO_KEY('EXIT_FORM');
			
			END IF;
		
		ELSE
			
			:PARAMETER.UPR_DZIAL := '%';
			
		END IF;
	
		/*IF :PARAMETER.ROLA IN ('DTS', 'PDT') THEN
			
			:PARAMETER.UPR_PION := 'N';
			
		ELSE

			:PARAMETER.UPR_PION := '%';
			
		END IF;*/
	
		IF S4A_FORM.UZYTKOWNIK_SYSTEM = 'T' THEN
		
			SET_ITEM_PROPERTY('SEARCH.UMOWA_ID', VISIBLE, PROPERTY_TRUE);
		
		ELSE
			
			SET_ITEM_PROPERTY('SEARCH.UMOWA_ID', VISIBLE, PROPERTY_FALSE);
		
		END IF;
	
	END PRIVILEGES;